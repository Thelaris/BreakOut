using System.Collections;
using System.Collections.Generic;
using UnityEngine;

public class LevelManager : MonoBehaviour {

	public int levelNum = 1;
	public int rows = 20;
	public int cols = 13;
	public bool levelEditor = false;

	public Level[] levelsArray;

	public int[,] tempBricksArray = new int[,] {
		//0  1  2  3  4  5  6  7  8  9  10 11 12
		{ 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 }, //0
		{ 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 }, //1
		{ 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 }, //2
		{ 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 }, //3
		{ 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 }, //4
		{ 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 }, //5
		{ 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 }, //6
		{ 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 }, //7
		{ 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 }, //8
		{ 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 }, //9
		{ 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 }, //10
		{ 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 }, //11
		{ 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 }, //12
		{ 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 }, //13
		{ 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 }, //14
		{ 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 }, //15
		{ 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 }, //16
		{ 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 }, //17
		{ 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 }, //18
		{ 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 }  //19

	};

	public int[,] blankLevelEditor = new int[,] {
		{ 99, 99, 99, 99, 99, 99, 99, 99, 99, 99, 99, 99, 99 }, //99
		{ 99, 99, 99, 99, 99, 99, 99, 99, 99, 99, 99, 99, 99 }, //1
		{ 99, 99, 99, 99, 99, 99, 99, 99, 99, 99, 99, 99, 99 }, //2
		{ 99, 99, 99, 99, 99, 99, 99, 99, 99, 99, 99, 99, 99 }, //3
		{ 99, 99, 99, 99, 99, 99, 99, 99, 99, 99, 99, 99, 99 }, //4
		{ 99, 99, 99, 99, 99, 99, 99, 99, 99, 99, 99, 99, 99 }, //5
		{ 99, 99, 99, 99, 99, 99, 99, 99, 99, 99, 99, 99, 99 }, //6
		{ 99, 99, 99, 99, 99, 99, 99, 99, 99, 99, 99, 99, 99 }, //7
		{ 99, 99, 99, 99, 99, 99, 99, 99, 99, 99, 99, 99, 99 }, //8
		{ 99, 99, 99, 99, 99, 99, 99, 99, 99, 99, 99, 99, 99 }, //9
		{ 99, 99, 99, 99, 99, 99, 99, 99, 99, 99, 99, 99, 99 }, //199
		{ 99, 99, 99, 99, 99, 99, 99, 99, 99, 99, 99, 99, 99 }, //11
		{ 99, 99, 99, 99, 99, 99, 99, 99, 99, 99, 99, 99, 99 }, //12
		{ 99, 99, 99, 99, 99, 99, 99, 99, 99, 99, 99, 99, 99 }, //13
		{ 99, 99, 99, 99, 99, 99, 99, 99, 99, 99, 99, 99, 99 }, //14
		{ 99, 99, 99, 99, 99, 99, 99, 99, 99, 99, 99, 99, 99 }, //15
		{ 99, 99, 99, 99, 99, 99, 99, 99, 99, 99, 99, 99, 99 }, //16
		{ 99, 99, 99, 99, 99, 99, 99, 99, 99, 99, 99, 99, 99 }, //17
		{ 99, 99, 99, 99, 99, 99, 99, 99, 99, 99, 99, 99, 99 }, //18
		{ 99, 99, 99, 99, 99, 99, 99, 99, 99, 99, 99, 99, 99 }
	};

	public int[,] bricksArray = new int[,] {
		//0  1  2  3  4  5  6  7  8  9  10 11 12
		{ 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 }, //0
		{ 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 }, //1
		{ 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 }, //2
		{ 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 }, //3
		{ 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 }, //4
		{ 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 }, //5
		{ 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 }, //6
		{ 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 }, //7
		{ 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 }, //8
		{ 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 }, //9
		{ 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 }, //10
		{ 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 }, //11
		{ 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 }, //12
		{ 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 }, //13
		{ 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 }, //14
		{ 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 }, //15
		{ 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 }, //16
		{ 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 }, //17
		{ 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 }, //18
		{ 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 }  //19

	};

	public static LevelManager instance = null;

	// Use this for initialization

	string[] splitString;
	string levelBrickData;


	void Start () {
		DontDestroyOnLoad (transform.gameObject);

		if (instance == null)
			instance = this;
		else if (instance != this)
			Destroy (gameObject);

		levelNum = 1;

	//	LoadLevel (8);
	}
	
	// Update is called once per frame
	void Update () {
		
	}

	public void LoadLevel(int iLevel) {
		//if (iLevel != 0) {
		//	iLevel--;
		//}
			
				string[] splitString = levelsArray [iLevel].brickData.Split (',');
				print (splitString [0]);
				print (splitString [1]);
				print (splitString.Length);
		int h = 0;
		for (int i = 0; i < rows; i++) {
			for (int j = 0; j < cols; j++) {
				bricksArray [i, j] = System.Convert.ToInt32(splitString [h]);
				h++;
			}
		}

	}

	public void SetLevel(int i) {
		//int i = System.Convert.ToInt32(level);
		levelNum = i;
	}


}
